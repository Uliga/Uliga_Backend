plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.2'
    id 'io.spring.dependency-management' version '1.1.0'
    // querydsl관련 명령어를 gradle탭에 생성해준다. (권장사항)
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    // rest docs
    id "org.asciidoctor.jvm.convert" version "3.3.2"

}

group = 'com.uliga'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    asciidoctorExt
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor("jakarta.persistence:jakarta.persistence-api")
    annotationProcessor("jakarta.annotation:jakarta.annotation-api")

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // == 스프링 부트 3.0 이상 ==
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"

    // rest docs
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

    compileOnly 'org.projectlombok:lombok'

    runtimeOnly 'mysql:mysql-connector-java'

    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation ('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine' //Junit4제외
    }
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.2'
}

tasks.named('test') {
    useJUnitPlatform()
}

// === Querydsl 빌드 옵션 (선택사항) ===
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets {
    main.java.srcDir querydslDir
}

configurations {
    querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

// 4.
ext {
    snippetsDir = file('build/generated-snippets')
}

test {
    outputs.dir snippetsDir // 5.
    useJUnitPlatform()
}

// 6.
asciidoctor {
    inputs.dir snippetsDir // 6-1
    configurations 'asciidoctorExt' // 6-2
    dependsOn test

}

// 7.
task copyDocument(type: Copy) {
    dependsOn asciidoctor
    doFirst{
        delete file('src/main/resources/static/docs')
    }
    from file("build/docs/asciidoc")
    into file("src/main/resources/static/docs")
}

// 8.
build {
    dependsOn copyDocument
}

// 9.
bootJar {
    dependsOn asciidoctor
    from ("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
}
